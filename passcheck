import re
import getpass
import hashlib
import sqlite3

conn = sqlite3.connect('passwords.db')
cursor = conn.cursor()

cursor.execute('''CREATE TABLE IF NOT EXISTS passwords (
                    id INTEGER PRIMARY KEY,
                    password_hash TEXT
                )''')

password = getpass.getpass("Enter your password: ")

# Check password strength
weaknesses = []

if len(password) < 8:
    weaknesses.append("Password should be at least 8 characters long.")

if not re.search(r"[A-Z]", password):
    weaknesses.append("Password should contain at least one uppercase letter.")

if not re.search(r"[a-z]", password):
    weaknesses.append("Password should contain at least one lowercase letter.")

if not re.search(r"\d", password):
    weaknesses.append("Password should contain at least one digit.")

if not re.search(r"\W", password):
    weaknesses.append("Password should contain at least one special character.")

if weaknesses:
    print("Password weaknesses:")
    for weakness in weaknesses:
        print(weakness)
else:
    hashed_password = hashlib.sha256(password.encode()).hexdigest()

    cursor.execute("INSERT INTO passwords (password_hash) VALUES (?)", (hashed_password,))
    conn.commit()

    cursor.execute("SELECT password_hash FROM passwords")
    stored_passwords = cursor.fetchall()

    for stored_password in stored_passwords:
        if hashed_password == stored_password[0]:
            print("Password is already used. Please choose a different one.")
            break

conn.close()
